{
    "fileTypes": [],
    "scopeName": "mdx.move.codeblock",
    "injectionSelector": "L:source.mdx",
    "patterns": [
        {
            "begin": "(?:^|\\G)[\\t ]*(`{3,})(?:[\\t ]*((?i:(?:.*\\.)?move))(?:[\\t ]+((?:[^\\n\\r`])+))?)(?:[\\t ]*$)",
            "beginCaptures": {
                "1": {
                    "name": "string.other.begin.code.fenced.mdx"
                },
                "2": {
                    "name": "entity.name.function.mdx"
                }
            },
            "contentName": "meta.embedded.move",
            "end": "(\\1)(?:[\\t ]*$)",
            "endCaptures": {
                "1": {
                    "name": "string.other.end.code.fenced.mdx"
                }
            },
            "name": "markup.code.move.mdx",
            "patterns": [
                {
                    "include": "source.move"
                }
            ]
        },
        {
            "begin": "(?:^|\\G)[\\t ]*(~{3,})(?:[\\t ]*((?i:(?:.*\\.)?move))(?:[\\t ]+((?:[^\\n\\r])+))?)(?:[\\t ]*$)",
            "beginCaptures": {
                "1": {
                    "name": "string.other.begin.code.fenced.mdx"
                },
                "2": {
                    "name": "entity.name.function.mdx"
                }
            },
            "contentName": "meta.embedded.move",
            "end": "(\\1)(?:[\\t ]*$)",
            "endCaptures": {
                "1": {
                    "name": "string.other.end.code.fenced.mdx"
                }
            },
            "name": "markup.code.move.mdx",
            "patterns": [
                {
                    "include": "source.move"
                }
            ]
        }
    ]
}
